name: Build and push the tagged build to production

on: [push]

jobs:
  build_push_image:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Prepare
        id: prep
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          SANITIZED_BRANCH_NAME=${BRANCH_NAME//\//-}
          TAG_NAME=${GITHUB_REF#refs/tags/}
          SANITIZED_TAG_NAME=${TAG_NAME//\//-}
          # Set outputs for use in this job and following jobs
          echo "BRANCH=$SANITIZED_BRANCH_NAME" >> $GITHUB_ENV
          echo "TAG=$SANITIZED_TAG_NAME" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_NAME }}
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push production images
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{secrets.ACR_NAME}}/contoso-website:${{ env.VERSION }}
            ${{secrets.ACR_NAME}}/contoso-website:${{ env.BRANCH }}
            ${{secrets.ACR_NAME}}/contoso-website:${{ env.TAG }}
          push: true
          no-cache: true

  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image
    steps:
      - uses: actions/checkout@v4

      - name: Install Helm
        uses: Azure/setup-helm@v3
        with:
          version: v3.11.1

      - name: Get AKS Credentials
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: mslearn-gh-pipelines-20999
          cluster-name: contoso-video

      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace production \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }} \
            --set image.tag=${GITHUB_REF##*/}

      - name: Rollout Restart
        run: |
          kubectl rollout restart deployment/contoso-website -n production
